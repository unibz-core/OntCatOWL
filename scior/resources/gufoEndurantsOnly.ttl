@prefix :     <http://purl.org/nemo/gufo#> .
@prefix dc:   <http://purl.org/dc/elements/1.1/> .
@prefix dct:  <http://purl.org/dc/terms/> .
@prefix owl:  <http://www.w3.org/2002/07/owl#> .
@prefix rdf:  <http://www.w3.org/1999/02/22-rdf-syntax-ns#> .
@prefix xml:  <http://www.w3.org/XML/1998/namespace> .
@prefix xsd:  <http://www.w3.org/2001/XMLSchema#> .
@prefix foaf: <http://xmlns.com/foaf/0.1/> .
@prefix gufo: <http://purl.org/nemo/gufo#> .
@prefix rdfs: <http://www.w3.org/2000/01/rdf-schema#> .
@prefix time: <http://www.w3.org/2006/time#> .
@prefix vann: <http://purl.org/vocab/vann/> .
@base <http://purl.org/nemo/gufo#> .

<http://purl.org/nemo/gufo#>
    rdf:type                      owl:Ontology ;
    owl:versionIRI                <http://purl.org/nemo/gufo#/1.0.0> ;
    dc:creator                    "Almeida, João Paulo A.", "Falbo, Ricardo A.", "Guizzardi, Giancarlo",
                                  "Sales, Tiago P." ;
    dc:title                      "gUFO: A Lightweight Implementation of the Unified Foundational Ontology (UFO)"@en ;
    dct:bibliographicCitation     "J. P. A. Almeida, G. Guizzardi, T. P. Sales, R. A. Falbo, \"gUFO: A Lightweight Implementation of the Unified Foundational Ontology (UFO)\", 2019, http://purl.org/nemo/doc/gufo"@en ;
    dct:created                   "2019-11-11"^^xsd:date ;
    dct:license                   <https://creativecommons.org/licenses/by/4.0/legalcode> ;
    dct:modified                  "2021-11-01"^^xsd:date ;
    vann:preferredNamespacePrefix "gufo"@en ;
    vann:preferredNamespaceUri    "http://purl.org/nemo/gufo#"^^xsd:anyURI ;
    rdfs:comment                  """The objective of gUFO is to provide a lightweight implementation of the Unified Foundational Ontology (UFO) [1-5] suitable for Semantic Web OWL 2 DL applications.

Intended users are those implementing UFO-based lightweight ontologies that reuse gUFO by specializing and instantiating its elements.

There are three implications of the use of the term lightweight. First of all, we have employed little expressive means in an effort to retain computational properties for the resulting OWL ontology. Second, we have selected a subset of UFO-A [1, 2] and UFO-B [3] to include here. In particular, there is minimalistic support for UFO-B (only that which is necessary to establish the participation of objects in events and to capture historical dependence between events). Third, a lightweight ontology, differently from a reference ontology, is designed with the purpose of providing an implementation artifact to structure a knowledge base (or knowledge graph). This has driven a number of pragmatic implementation choices which are discussed in comments annotated to the various elements of this implementation. 

The 'g' in gUFO stands for gentle. At the same time, \"gufo\" is the Italian word for \"owl\".

For background information on the reference ontology on which this implementation is based, see: 

1. G. Guizzardi, G. Wagner, J. P. A. Almeida, R. S. S. Guizzardi, “Towards ontological foundations for conceptual modeling: The unified foundational ontology (UFO) story,” Applied Ontology (Online), vol. 10, p. 259–271, 2015. <http://dx.doi.org/10.3233/ao-150157>
2. G. Guizzardi, Ontological Foundations for Structural Conceptual Models,
PhD Thesis, University of Twente, The Netherlands, 2005. <https://research.utwente.nl/en/publications/ontological-foundations-for-structural-conceptual-models>
3. G. Guizzardi, G. Wagner, R. A. Falbo, R. S. S. Guizzardi, and J. P. A. Almeida, “Towards Ontological Foundations for the Conceptual Modeling of Events,” in Proc. 32th International Conference, ER 2013, 2013, p. 327–341. <https://doi.org/10.1007/978-3-642-41924-9_27>
4. G. Guizzardi, C. M. Fonseca, A. B. Benevides, J. P. A. Almeida, D. Porello, T. P. Sales, “Endurant Types in Ontology-Driven Conceptual Modeling: Towards OntoUML 2.0,” in Conceptual Modeling – 37th International Conference, ER 2018, 2018, p. 136–150. <https://doi.org/10.1007/978-3-030-00847-5_12>
5. C. M. Fonseca, D. Porello, G. Guizzardi, J. P. A. Almeida, and N. Guarino, “Relations in ontology-driven conceptual modeling,” in 38th International Conference on Conceptual Modeling (ER 2019), LNCS, 2019. v. 11788, 2019, p. 1–15. <http://dx.doi.org/10.1007/978-3-030-33223-5_4>

Cite this work as: 

J. P. A. Almeida, G. Guizzardi, T. P. Sales, R. A. Falbo, \"gUFO: A Lightweight Implementation of the Unified Foundational Ontology (UFO)\", 2019, http://purl.org/nemo/doc/gufo

This work is distributed under Creative Commons Attribution License CC BY 4.0 <https://creativecommons.org/licenses/by/4.0/legalcode>.

For the source repository, see: <https://github.com/nemo-ufes/gufo>"""@en ;
    owl:versionInfo               "1.0.0"@en .

#################################################################
#    Annotation properties
#################################################################

###  http://purl.org/dc/elements/1.1/creator
dc:creator
    rdf:type owl:AnnotationProperty .


###  http://purl.org/dc/elements/1.1/title
dc:title
    rdf:type owl:AnnotationProperty .


###  http://purl.org/dc/terms/bibliographicCitation
dct:bibliographicCitation
    rdf:type owl:AnnotationProperty .


###  http://purl.org/dc/terms/created
dct:created
    rdf:type owl:AnnotationProperty .


###  http://purl.org/dc/terms/license
dct:license
    rdf:type owl:AnnotationProperty .


###  http://purl.org/dc/terms/modified
dct:modified
    rdf:type owl:AnnotationProperty .


###  http://purl.org/vocab/vann/preferredNamespacePrefix
vann:preferredNamespacePrefix
    rdf:type owl:AnnotationProperty .


###  http://purl.org/vocab/vann/preferredNamespaceUri
vann:preferredNamespaceUri
    rdf:type owl:AnnotationProperty .


#################################################################
#    Datatypes
#################################################################

###  http://www.w3.org/2001/XMLSchema#date
xsd:date
    rdf:type rdfs:Datatype .


#################################################################
#    Classes
#################################################################

###  http://purl.org/nemo/gufo#AntiRigidType
gufo:AntiRigidType
    rdf:type         owl:Class ;
    rdfs:subClassOf  gufo:NonRigidType ;
    owl:disjointWith gufo:SemiRigidType ;
    rdfs:comment     """A gufo:NonRigidType that applies contingently to all its instances (see Guizzardi, 2005, chapter 4).

Examples include the gufo:Phase \"Child\", the gufo:PhaseMixin \"InfantAnimal\", the gufo:Role \"Student\", and the gufo:RoleMixin \"Customer\"."""@en ;
    rdfs:label       "AntiRigidType"@en .


###  http://purl.org/nemo/gufo#Aspect
gufo:Aspect
    rdf:type            owl:Class ;
    rdfs:subClassOf     gufo:Endurant ;
    owl:disjointWith    gufo:Object ;
    owl:disjointUnionOf ( gufo:ExtrinsicAspect gufo:IntrinsicAspect ) ;
    rdfs:comment        """A gufo:Endurant that depends on at least one other concrete individual for its existence. A gufo:Aspect is a characteristic or trait of a concrete individual that is itself conceived as an individual.

Examples include: intrinsic physical aspects, such as the Moon's mass, Lassie's fur color; mental dispositions, such as Bob's math skills, his belief that the number one is odd; as well as relational aspects, such as John's love for Mary and the marriage between John and Mary. 

The specific sort of existential dependence connecting aspects to their bearers is called inherence.

Corresponds to \"Moment\" in Guizzardi (2005). 

Also termed \"property instance\", \"particularized property\", \"individual accident\", or \"(variable) trope\" in the philosophical literature."""@en ;
    rdfs:label          "Aspect"@en .


###  http://purl.org/nemo/gufo#Category
gufo:Category
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:NonSortal, gufo:RigidType ;
    rdfs:comment    """A gufo:EndurantType that is both non-sortal and rigid. It captures essential properties that apply to instances of different kinds.

For example, \"PhysicalObject\" may be considered a gufo:Category, encompassing objects such as cars, planets, trees. \"Agent\" may be a gufo:Category that classifies both people and organizations."""@en ;
    rdfs:label      "Category"@en .


###  http://purl.org/nemo/gufo#Collection
gufo:Collection
    rdf:type            owl:Class ;
    rdfs:subClassOf     gufo:Object ;
    owl:disjointUnionOf ( gufo:FixedCollection gufo:VariableCollection ) ;
    rdfs:comment        """A complex gufo:Object whose parts (the members of the collection) have a uniform structure (i.e., members are conceived as playing the same role in the collection). Collections may have a fixed or variable membership, which can be asserted using gufo:FixedCollection and gufo:VariableCollection respectively.

Examples include a deck of cards, a pile of bricks, a forest (conceived as a collection of trees), and a group of people.

Collections in many cases constitute a functional complex. For example, a pile of bricks may constitute a wall, a group of people may constitute a football team.

A gufo:Collection may be decomposed into \"smaller\" collections. For instance, a group of people may be decomposed into a group of English speakers and a group of Italian speakers. Sub collections may or may not share members among them."""@en ;
    rdfs:label          "Collection"@en .


###  http://purl.org/nemo/gufo#Endurant
gufo:Endurant
    rdf:type            owl:Class ;
    owl:disjointUnionOf ( gufo:Aspect gufo:Object ) ;
    rdfs:comment        """A gufo:ConcreteIndividual that endures in time and may change qualitatively while keeping its identity.

Examples include: ordinary objects of everyday experience, such as a person, a house, and a car; reified relationships, such as a marriage, a rental contract, and a person's love for another; and existentially-dependent aspects of objects, such as a car's weight, a person's language skills, and a house's color. 

Also termed \"continuant\" in the philosophical literature."""@en ;
    rdfs:label          "Endurant"@en .


###  http://purl.org/nemo/gufo#EndurantType
gufo:EndurantType
    rdf:type            owl:Class ;
    owl:disjointUnionOf ( gufo:NonRigidType gufo:RigidType ), ( gufo:NonSortal gufo:Sortal ) ;
    rdfs:comment        """A gufo:Type whose instances are endurants.

Instances of gufo:EndurantType are subclasses of gufo:Endurant.

Examples include the object kind \"Person\", the phase \"Child\", the relator kind \"Marriage\".

See Guizzardi et al. (2018) for details concerning the taxonomy of endurant types included here."""@en ;
    rdfs:label          "EndurantType"@en .


###  http://purl.org/nemo/gufo#ExtrinsicAspect
gufo:ExtrinsicAspect
    rdf:type            owl:Class ;
    rdfs:subClassOf     gufo:Aspect ;
    owl:disjointWith    gufo:IntrinsicAspect ;
    owl:disjointUnionOf ( gufo:ExtrinsicMode gufo:Relator ) ;
    rdfs:comment        """A gufo:Aspect that depends on one or more concrete individuals.

Extrinsic (or \"relational\") aspects are reified relationships, e.g., John and Mary's marriage, Mary's employment contract at Nasa, or parts of those relationships, e.g., John's obligations towards Mary in the scope of the marriage, Mary's reciprocal claims, Mary's obligations towards John, John's reciprocal claims. Extrinsic aspects can also be reified one-sided relationships, e.g., John's admiration for Obama (which depends on Obama but does not characterize him).

Corresponds to \"Extrinsic Moment\" in Fonseca et al (2019). Encompasses \"Externally Depedent Mode\", \"Qua Individual\" and \"Relator\" in Guizzardi (2005)."""@en ;
    rdfs:label          "ExtrinsicAspect"@en .


###  http://purl.org/nemo/gufo#ExtrinsicMode
gufo:ExtrinsicMode
    rdf:type         owl:Class ;
    rdfs:subClassOf  gufo:ExtrinsicAspect ;
    owl:disjointWith gufo:Relator ;
    rdfs:comment     """A gufo:ExtrinsicAspect that inheres in a concrete individual and depends on others for its existence.

A gufo:ExtrinsicMode can be understood as a reified one-sided relationship, such as John's admiration for Mary.

Corresponds to \"Extrinsic Moment\" in Fonseca et al (2019). Encompasses what \"Externally Dependent Mode\", \"Qua Individual\" and \"Relator\" in Guizzardi (2005)."""@en ;
    rdfs:label       "ExtrinsicMode"@en .


###  http://purl.org/nemo/gufo#FixedCollection
gufo:FixedCollection
    rdf:type         owl:Class ;
    rdfs:subClassOf  gufo:Collection ;
    owl:disjointWith gufo:VariableCollection ;
    rdfs:comment     """A gufo:Collection for which no change in membership is possible.

Such a collection obeys an extensional principle of identity, i.e., two fixed collections are the same if, and only if, they have the same members.

Consider, for example, a group of people understood as a gufo:FixedCollection. In this case, any change in the membership of the group (e.g., the addition of one person) would in fact create a different group of people. In this case, the gufo:FixedCollection may be contrasted with the complexes they constitute. For instance, The Beatles (the band conceived as a gufo:FunctionalComplex) was in a certain circumstance constituted by the collection {John, Paul, George, Pete} and in another one constituted by the collection {John, Paul, George, Ringo}. The replacement of Pete Best by Ringo Star does not alter the identity of the band, but creates a  different group of people."""@en ;
    rdfs:label       "FixedCollection"@en .


###  http://purl.org/nemo/gufo#FunctionalComplex
gufo:FunctionalComplex
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:Object ;
    rdfs:comment    """A complex gufo:Object whose parts (components) play different roles in its composition.

For example, a person could be considered a gufo:FunctionalComplex with the various organs (heart, brain, lungs, etc.) playing different roles. Another example is a scrum team, which is composed by people playing the roles of scrum master, product owner, developer, etc.

To explicitly capture temporary components, use gufo:TemporaryParthoodSituation."""@en ;
    rdfs:label      "FunctionalComplex"@en .


###  http://purl.org/nemo/gufo#IntrinsicAspect
gufo:IntrinsicAspect
    rdf:type            owl:Class ;
    rdfs:subClassOf     gufo:Aspect ;
    owl:disjointUnionOf ( gufo:IntrinsicMode gufo:Quality ) ;
    rdfs:comment        """A gufo:Aspect that depends on a single concrete individual in which it inheres.

Examples include intrinsic physical aspects, such as the Moon's mass, Lassie's fur color; the fragility of John Lennon's glasses; mental dispositions, such as Bob's math skills, his belief that the number one is odd.

A gufo:IntrinsicAspect is classified as a gufo:Quality (e.g., an apple's weight, the height of the Statue of Liberty) if it is measurable by a certain value space, or as a gufo:IntrinsicMode (e.g. Bob's belief that the Eiffel Tower is in Paris) otherwise.

Corresponds to \"Instrinsic Moment\" in Guizzardi (2005). Different from Guizzardi (2005), here we consider that aspects can inhere in concrete individuals in general, and not only in endurants."""@en ;
    rdfs:label          "IntrinsicAspect"@en .


###  http://purl.org/nemo/gufo#IntrinsicMode
gufo:IntrinsicMode
    rdf:type         owl:Class ;
    rdfs:subClassOf  gufo:IntrinsicAspect ;
    owl:disjointWith gufo:Quality ;
    rdfs:comment     """A gufo:IntrinsicAspect that is not measurable.

For example, Bob's belief that the Eiffel Tower is in Paris, his math skills, his headache.

Corresponds to \"Mode\" in Guizzardi (2005)."""@en ;
    rdfs:label       "IntrinsicMode"@en .


###  http://purl.org/nemo/gufo#Kind
gufo:Kind
    rdf:type         owl:Class ;
    rdfs:subClassOf  gufo:RigidType, gufo:Sortal ;
    owl:disjointWith gufo:SubKind ;
    rdfs:comment     """A gufo:EndurantType that is both sortal and rigid. It provides a uniform principle of identity for its instances. Every gufo:Endurant instantiates one and only one gufo:Kind.

Examples include kinds of ordinary objects of everyday experience, such as: \"Person\", \"House\", \"Car\"; kinds of relators, such as \"Marriage\", \"RentalContract\"; kinds of existentially-dependent aspects of objects, such as \"Weight\", \"Belief\", \"Vulnerability\"."""@en ;
    rdfs:label       "Kind"@en .


###  http://purl.org/nemo/gufo#Mixin
gufo:Mixin
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:NonSortal, gufo:SemiRigidType ;
    rdfs:comment    """A gufo:EndurantType that is both non-sortal and semi-rigid. As a semi-rigid type, it applies necessarily to some of its instances and contingently to some others. As a non-sortal, it captures properties shared by instances of different kinds.

For example, the type \"FemaleAnimal\" may be considered a gufo:Mixin as it applies necessarily to animals of certain species, e.g., lions and sharks, while it applies contingently to animals of other species such as clownfish and mushroom corals (which may change sex given certain conditions)."""@en ;
    rdfs:label      "Mixin"@en .


###  http://purl.org/nemo/gufo#NonRigidType
gufo:NonRigidType
    rdf:type            owl:Class ;
    rdfs:subClassOf     gufo:EndurantType ;
    owl:disjointWith    gufo:RigidType ;
    owl:disjointUnionOf ( gufo:AntiRigidType gufo:SemiRigidType ) ;
    rdfs:comment        """A gufo:EndurantType that does not apply necessarily to at least one of its instances (see Guizzardi, 2005, chapter 4).

Examples include anti-rigid types, such as the role \"Student\" and the phase \"Child\", and semi-rigid types, such as the mixin \"MusicalArtist\" (which necessarily characterizes bands, but contingently characterizes people) and the mixin \"FemaleAnimal\" (which is necessarily characterizes female dogs, but contigently characterizes clownfish)."""@en ;
    rdfs:label          "NonRigidType"@en .


###  http://purl.org/nemo/gufo#NonSortal
gufo:NonSortal
    rdf:type         owl:Class ;
    rdfs:subClassOf  gufo:EndurantType ;
    owl:disjointWith gufo:Sortal ;
    rdfs:comment     """A gufo:EndurantType that applies to individuals of different kinds (see Guizzardi, 2005, chapter 4).

Non-sortals do not provide a uniform principle of identity for their instances; instead, they just classify things that share common properties but which obey different principles of identity.

Also termed \"dispersive\" types in the philosophical literature."""@en ;
    rdfs:label       "NonSortal"@en .


###  http://purl.org/nemo/gufo#Object
gufo:Object
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:Endurant ;
    rdfs:comment    """A gufo:Endurant that does not depend on another endurant for its existence (excluding its essential parts and aspects).

Examples of objects include ordinary physical entities, such as a dog, a house, a tomato, a car, Alan Turing, but also socially-defined entities such as The Rolling Stones, the European Union, the Brazilian 1988 Constitution.

Guizzardi (2005) also included the more abstract notion of \"Substantial\", which generalizes both objects and amounts of matter. That notion was left out from this implementation, together with the notion of amount of matter. Support for the representation of maximally-self-connected amounts of matter is given by gufo:Quantity."""@en ;
    rdfs:label      "Object"@en .


###  http://purl.org/nemo/gufo#Phase
gufo:Phase
    rdf:type         owl:Class ;
    rdfs:subClassOf  gufo:AntiRigidType, gufo:Sortal ;
    owl:disjointWith gufo:Role ;
    rdfs:comment     """A gufo:EndurantType that is both sortal and anti-rigid. It is defined by instrinsic but contingent instantiation conditions. Phases are relationally independent types that capturec instrinsic properties shared by instances of a given kind.

For example, \"Child\" may be considered a gufo:Phase as a subclass of the gufo:Kind \"Person\", instantiated by persons younger than 12. Another example is the type \"IllPerson\", which may be considered a gufo:Phase that is instantiated whenever an instance of \"Disease\" (a gufo:IntrinsicMode) inheres in a person."""@en ;
    rdfs:label       "Phase"@en .


###  http://purl.org/nemo/gufo#PhaseMixin
gufo:PhaseMixin
    rdf:type         owl:Class ;
    rdfs:subClassOf  gufo:AntiRigidType, gufo:NonSortal ;
    owl:disjointWith gufo:RoleMixin ;
    rdfs:comment     """A gufo:EndurantType that is both non-sortal and anti-rigid. It is defined by instrinsic but contingent instantiation conditions. Phase mixins are relationally independent types that capture instrinsic properties shared by instances of different kinds.

For example, \"LivingAnimal\" may be considered a gufo:PhaseMixin as a superclass of the phases \"LivingPerson\" (specializing the gufo:Kind \"Person\") and \"LivingDog\" (specializing the gufo:Kind \"Dog\")."""@en ;
    rdfs:label       "PhaseMixin"@en .


###  http://purl.org/nemo/gufo#Quality
gufo:Quality
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:IntrinsicAspect ;
    rdfs:comment    """A gufo:IntrinsicAspect that is measurable by some value spaces. A quality may be used to compare individuals, on the basis of the value it takes in a certain quality space (for instance, a position within the RGB spectrum).

Examples include the weight of a person, the name of organization, the color of a car, and the duration of a concert."""@en ;
    rdfs:label      "Quality"@en .


###  http://purl.org/nemo/gufo#Quantity
gufo:Quantity
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:Object ;
    rdfs:comment    """A complex gufo:Object that is a maximally-connected portion of stuff. A gufo:Quantity has a fixed constitution, and thus, removing or adding a sub-quantity would result in a different quantity.

Examples include the portion of wine in a wine tank, a lump of clay, the gold that constitutes a wedding ring.

Also termed \"quantity of matter\", \"objectified portion of matter\", \"piece\" in the philosophical literature."""@en ;
    rdfs:label      "Quantity"@en .


###  http://purl.org/nemo/gufo#Relator
gufo:Relator
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:ExtrinsicAspect ;
    rdfs:comment    """A gufo:ExtrinsicAspect that connects (involves, mediates) two or more concrete individuals. Relators are reified relationships composed of reciprocal extrinsic modes.

Examples of relators include John and Mary's marriage (composed of John's obligations towards Mary in the scope of the marriage, Mary's reciprocal claims, Mary's obligations towards John, John's reciprocal claims), Mary's employment contract at Nasa, a covalent bond between two atoms."""@en ;
    rdfs:label      "Relator"@en .


###  http://purl.org/nemo/gufo#RigidType
gufo:RigidType
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:EndurantType ;
    rdfs:comment    """A gufo:EndurantType which applies necessarily to its instances (see Guizzardi, 2005, chapter 4).

Examples include the types \"Agent\", \"Person\", \"Animal\", \"PhysicalObject\", \"Car\", and \"Tree\"."""@en ;
    rdfs:label      "RigidType"@en .


###  http://purl.org/nemo/gufo#Role
gufo:Role
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:AntiRigidType, gufo:Sortal ;
    rdfs:comment    """A gufo:EndurantType that both sortal and anti-rigid. It is defined by relational instantiation conditions. Roles are relationally dependent types, capturing relational properties shared by instances of a given kind.

For example, \"Student\" may be considered a gufo:Role as a subclass of the gufo:Kind \"Person\", instantiated by all persons enrolled in a school. \""""@en ;
    rdfs:label      "Role"@en .


###  http://purl.org/nemo/gufo#RoleMixin
gufo:RoleMixin
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:AntiRigidType, gufo:NonSortal ;
    rdfs:comment    """A gufo:EndurantType that is both non-sortal and anti-rigid. It is defined by relational instantiation conditions. Role mixins are relationally dependent types, capturing relational properties shared by instances of different kinds.

For example, \"Customer\" may be considered a gufo:RoleMixin as a superclass of the roles \"CorporateCustomer\" (specializing the gufo:Kind \"BusinessOrganization\") and \"PersonalCustomer\" (specializing the gufo:Kind \"Person\")."""@en ;
    rdfs:label      "RoleMixin"@en .


###  http://purl.org/nemo/gufo#SemiRigidType
gufo:SemiRigidType
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:NonRigidType ;
    rdfs:comment    "A gufo:NonRigidType that applies necessarily to some of its instances and contingently to some others (see Guizzardi, 2005, chapter 4)."@en ;
    rdfs:label      "SemiRigidType"@en .


###  http://purl.org/nemo/gufo#Sortal
gufo:Sortal
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:EndurantType ;
    rdfs:comment    "A gufo:EndurantType which carries (or supplies) a principle of identity for its instances  (see Guizzardi, 2005, chapter 4)."@en ;
    rdfs:label      "Sortal"@en .


###  http://purl.org/nemo/gufo#SubKind
gufo:SubKind
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:RigidType, gufo:Sortal ;
    rdfs:comment    """A gufo:EndurantType that is both sortal and rigid. It specializes a gufo:Kind carrying the principle of identity supplied by that kind. Every gufo:SubKind should directly or indirectly specialize a gufo:Kind.

For example, the gufo:Kind \"Lion\" may be specialized into the \"Lionness\" and \"Male Lion\" subkinds, while the gufo:Kind \"Computer\" may be specialized into the \"Laptop\" and \"Desktop\" subkinds."""@en ;
    rdfs:label      "SubKind"@en .


###  http://purl.org/nemo/gufo#VariableCollection
gufo:VariableCollection
    rdf:type        owl:Class ;
    rdfs:subClassOf gufo:Collection ;
    rdfs:comment    """A gufo:Collection for which change in membership is possible.

Such a collection obeys an intensional principle of identity, i.e., change in membership does not necessarily create a different collection.

For example, KLM's fleet of airplanes could be understood as a gufo:VariableCollection. In this case, when the company acquires (or retires) an airplane, the fleet changes. Note that, in this case, the airplanes are conceptualized as playing the role of \"member of a fleet\". If various roles for the parts of a fleet were envisioned (such as \"cargo airplane\", \"passenger airplane\"), then a fleet would be best understood as a gufo:FunctionalComplex.

See gufo:TemporaryParthoodSituation for the pattern to represent the relation of a variable collection to its temporary parts."""@en ;
    rdfs:label      "VariableCollection"@en .


#################################################################
#    General axioms
#################################################################

[ rdf:type owl:AllDisjointClasses ;
  owl:members ( gufo:Collection
                gufo:FunctionalComplex
                gufo:Quantity
              )
] .


###  Generated by the OWL API (version 4.5.9.2019-02-01T07:24:44Z) https://github.com/owlcs/owlapi
